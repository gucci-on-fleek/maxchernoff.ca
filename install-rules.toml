# Source Code for maxchernoff.ca
# https://github.com/gucci-on-fleek/maxchernoff.ca
# SPDX-License-Identifier: MPL-2.0+ OR CC-BY-SA-4.0+
# SPDX-FileCopyrightText: 2025 Max Chernoff

#################
### Variables ###
#################

[variables]
builder = "/var/home/builder/"
etc = "/etc/"
max = "/var/home/max/"
repo = "/var/home/repo/maxchernoff.ca/"
repo-user = "/var/home/repo/"
tex = "/var/home/tex/"
web = "/var/home/web/"
woodpecker = "/var/home/woodpecker/"


###############
### SELinux ###
###############

[selinux]
rules = """
# Reset some settings to their defaults
boolean --deleteall
fcontext --deleteall
login --deleteall
module --deleteall

# Allow max to sudo
login --add --seuser staff_u --range 's0-s0:c0.c1023' max

# Let all users run containers
login --modify --seuser user_u --range 's0-s0:c0.c1023' __default__

# Load the custom policies
module --add /etc/selinux/local-policies/local-allow-containers.cil
module --add /etc/selinux/local-policies/local-pasta.cil
module --add /etc/selinux/local-policies/local-prometheus.cil
module --add /etc/selinux/local-policies/local-systemd.cil
module --add /usr/share/udica/templates/base_container.cil
module --add /usr/share/udica/templates/net_container.cil

# Set the container file contexts
fcontext --add --seuser user_u --type container_file_t    '{repo-user}triggers(/.*)?'
fcontext --add --seuser user_u --type container_file_t    '{web}caddy/logs(/.*)?'
fcontext --add --seuser user_u --type container_file_t    '{web}overleaf(/.*)?'
fcontext --add --seuser user_u --type container_file_t    '{web}woodpecker/data(/.*)?'
fcontext --add --seuser user_u --type container_file_t    '{woodpecker}woodpecker/config(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{etc}containers(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}builder/containers(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/caddy(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/dnscontrol(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/flask(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/goaccess(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/knot(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/maddy(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{repo}web/prometheus(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{tex}context-installer/tex(/.*)?'
fcontext --add --seuser user_u --type container_ro_file_t '{tex}texlive(/.*)?'

# Set the file context equivalents
fcontext --add '{repo}builder/.config' --equal '{builder}.config'
fcontext --add '{repo}max/.config' --equal '{max}.config'
fcontext --add '{repo}tex/.config' --equal '{tex}.config'
fcontext --add '{repo}web/.config' --equal '{web}.config'
fcontext --add '{repo}woodpecker/.config' --equal '{woodpecker}.config'

# Let us host the network services as unprivileged users
boolean --modify selinuxuser_tcp_server --on
boolean --modify selinuxuser_udp_server --on
boolean --modify container_manage_cgroup --on
"""


############
### repo ###
############

[[permissions]]
base = "{repo-user}"
paths = ["*"]
owner = "repo"
permissions.other = ""

[[permissions]]
base = "/var/home/"
paths = ["repo/", "repo/maxchernoff.ca/", "repo/triggers/"]
owner = "repo"
permissions.other = "r"

[[permissions]]
base = "{repo}"
paths = ["*"]
owner = "repo"
permissions.other = "r"
recursive_permissions = true

[[permissions]]
base = "{repo}/"
paths = [".git*", "install-rules.toml"]
owner = "repo"
permissions.other = ""
recursive_permissions = true

[[folder]]
base = "{repo-user}"
paths = ["triggers"]
owner = "repo"
permissions.other = "r"

[[touch]]
base = "{repo-user}/triggers/"
paths = [
    "install-repo-maxchernoff.ca.trigger",
    "get-status.trigger",
    "get-status.output",
]
owner = "repo"
permissions.max = "rw"
permissions.root = "rw"
permissions."web/1000" = "rw"
permissions.other = ""


###########
### etc ###
###########

[[copy]]
source = "{repo}/etc/"
destination = "{etc}/"
paths = ["**/*"]
owner = "root"
permissions.other = "r"


#################
### usr/local ###
#################

[[copy]]
source = "{repo}/usrlocal/"
destination = "/usr/local/"
paths = ["**/*"]
owner = "root"
permissions.other = "r"


###########
### max ###
###########

[[permissions]]
base = "{max}"
paths = ["*"]
owner = "max"
permissions.other = ""

[[copy]]
source = "{repo}/max/"
destination = "{max}/"
paths = [".ssh/known_hosts", ".config/fish/config.fish"]
owner = "max"

# Risky, so we keep this commented out most of the time
# [[copy]]
# source = "{repo}/max/"
# destination = "{max}/"
# paths = [".ssh/authorized_keys",]
# owner = "max"


###########
### tex ###
###########

[[permissions]]
base = "{tex}"
paths = ["*"]
owner = "tex"
permissions.other = ""

[[permissions]]
base = "{repo}"
paths = ["tex/"]
owner = "repo"
permissions.tex = "r"
recursive_permissions = true

[[link]]
source = "{repo}/tex/"
destination = "{tex}/"
paths = [".config/systemd/user/"]
owner = "tex"

[[permissions]]
base = "{tex}"
paths = ["texlive/", "context-installer/tex/", "context/"]
owner = "tex"
permissions.other = "r"
recursive_permissions = false # Too slow to set permissions on all files


###########
### web ###
###########

[[permissions]]
base = "{web}"
paths = ["*"]
owner = "web"
permissions.other = ""

[[permissions]]
base = "{repo}"
paths = ["web/"]
owner = "repo"
permissions.web = "r"
recursive_permissions = true

[[link]]
source = "{repo}/web/"
destination = "{web}/"
paths = [
    ".config/builder/",
    ".config/systemd/user/",
    ".config/prometheus-podman-exporter",
]
permissions.web = "r"
owner = "root"

[[link]]
source = "{repo}/web/"
destination = "{web}/"
paths = [
    "caddy/*/",
    "dnscontrol",
    "flask",
    "goaccess",
    "knot/*/",
    "maddy/config",
    "prometheus/config",
]
permissions.web = "r"
permissions."web/root" = "r"
permissions."web/1000" = "r"
permissions."web/53" = "r"
permissions.max = "rw"
owner = "web"

[[folder]]
base = "{web}"
paths = [
    "caddy/config/",
    "caddy/data/",
    "caddy/logs/",
    "overleaf/overleaf/",
    "woodpecker/data/",
]
owner = "web/root"
permissions.web = "rw"

[[folder]]
base = "{web}"
paths = ["overleaf/redis/", "overleaf/mongo/"]
owner = "web/root"
permissions."web/999" = "rw"
permissions."web/root" = "rw"

[[folder]]
base = "{web}"
paths = ["overleaf/overleaf/"]
owner = "web"
permissions."web/33" = "rw"

[[permissions]]
base = "{web}/caddy/"
paths = ["etc/", "static/"]
permissions."web/root" = "r"
permissions."web" = "r"
owner = "repo"
recursive_permissions = true

[[touch]]
base = "{web}/caddy/"
paths = [
    "static/analytics/requests.tsv",
    "static/analytics/graphs",
    "logs/access.log",
]
permissions."web/root" = "rw"
permissions.web = "rw"
owner = "web/root"

[[permissions]]
base = "{web}/woodpecker/"
paths = ["data/"]
permissions."web/1000" = "rw"
permissions.web = "rw"
owner = "web/1000"
recursive_permissions = true

[[permissions]]
base = "{web}/"
paths = ["flask"]
owner = "repo"
permissions."web/1000" = "r"
permissions.web = "rw"
recursive_permissions = true

[[permissions]] # For scp
base = "{repo}"
paths = ["web/caddy/static/files"]
owner = "repo"
permissions.max = "rw"
permissions.web = "r"
permissions."web/root" = "r"
recursive_permissions = true

[[permissions]]
base = "{web}/"
paths = ["goaccess"]
owner = "repo"
permissions."web/root" = "r"
permissions.web = "r"
recursive_permissions = true

[[folder]]
base = "{web}"
paths = ["knot/storage/"]
owner = "web"
permissions.web = "rw"
permissions."web/53" = "rw"
permissions."web/root" = "rw"

[[permissions]]
base = "{repo}/web/knot/"
paths = ["config"]
owner = "repo"
permissions.web = "r"
permissions."web/53" = "r"
permissions."web/root" = "r"
recursive_permissions = true

[[permissions]]
base = "{web}/caddy/"
paths = ["logs/"]
owner = "web"
permissions.web = "rw"
permissions."web/root" = "rw"
recursive_permissions = true

[[permissions]]
base = "{repo}/web/"
paths = ["dnscontrol"]
owner = "repo"
permissions.web = "r"
permissions."web/root" = "r"
recursive_permissions = true

[[folder]]
base = "{web}"
paths = ["maddy/data/"]
owner = "web"
permissions.web = "rw"
permissions."web/1000" = "rw"

[[permissions]]
base = "{web}/maddy/"
paths = ["config"]
permissions."web/1000" = "r"
permissions."web" = "r"
owner = "repo"
recursive_permissions = true

[[folder]]
base = "{web}/prometheus/"
paths = ["data"]
owner = "web"
permissions.web = "rw"
permissions."web/65534" = "rw"

[[permissions]]
base = "{web}/prometheus/"
paths = ["config"]
permissions."web/65534" = "r"
permissions."web" = "r"
owner = "repo"
recursive_permissions = true


##################
### woodpecker ###
##################

[[permissions]]
base = "{woodpecker}"
paths = ["*"]
owner = "woodpecker"
permissions.other = ""

[[permissions]]
base = "{repo}"
paths = ["woodpecker/"]
owner = "repo"
permissions.woodpecker = "r"
recursive_permissions = true

[[link]]
source = "{repo}/woodpecker/"
destination = "{woodpecker}/"
paths = [
    ".config/systemd/user/",
    ".config/builder/",
    ".config/prometheus-podman-exporter",
]
permissions.woodpecker = "r"

[[folder]]
base = "{woodpecker}"
paths = ["woodpecker/config/"]
owner = "woodpecker"

[[permissions]]
base = "{woodpecker}/woodpecker/"
paths = ["config/"]
permissions."woodpecker/1000" = "rw"
permissions.woodpecker = "rw"
owner = "woodpecker/1000"
recursive_permissions = true


###############
### builder ###
###############

[[permissions]]
base = "{builder}"
paths = ["*"]
owner = "builder"
permissions.other = ""

[[permissions]]
base = "{repo}"
paths = ["builder/"]
owner = "repo"
permissions.builder = "r"
recursive_permissions = true

[[link]]
source = "{repo}/builder/"
destination = "{builder}/"
paths = [
    ".config/systemd/user/",
    "containers/",
    ".config/prometheus-podman-exporter",
]
permissions.builder = "r"

[[folder]]
base = "{builder}/.cache/"
paths = ["podman-dnf/", "go-build/", "go-modules/", "rpm-ostree/"]
owner = "builder"
