;; Source Code for maxchernoff.ca
;; https://github.com/gucci-on-fleek/maxchernoff.ca
;; SPDX-License-Identifier: MPL-2.0+ OR CC-BY-SA-4.0+
;; SPDX-FileCopyrightText: 2025 Max Chernoff

;; Includes
(roleattributeset cil_gen_require container_user_r)
(roleattributeset cil_gen_require staff_r)
(roleattributeset cil_gen_require user_r)
(roleattributeset cil_gen_require usernetctl_roles)
(typeattributeset cil_gen_require container_runtime_t)
(typeattributeset cil_gen_require container_t)
(typeattributeset cil_gen_require ifconfig_var_run_t)
(typeattributeset cil_gen_require pasta_exec_t)
(typeattributeset cil_gen_require pasta_t)
(typeattributeset cil_gen_require port_type)

;; Allow network administration commands for non-privileged users
(roleattributeset usernetctl_roles (container_user_r staff_r user_r))
(roletype usernetctl_roles pasta_t)

;; Make pasta in a container run under the pasta_t context
(typetransition container_runtime_t pasta_exec_t process pasta_t)
(allow container_runtime_t pasta_t (process (transition)))

;; Label the user network namespace files
(typetransition container_runtime_t user_tmp_t dir "netns" ifconfig_var_run_t)
(typetransition container_runtime_t user_tmp_t dir "rootless-netns" ifconfig_var_run_t)
(filecon "/run/user/%{USERID}/netns" any (system_u object_r ifconfig_var_run_t ((s0) (s0))))
(filecon "/run/user/%{USERID}/containers/networks/rootless-netns" any (system_u object_r ifconfig_var_run_t ((s0) (s0))))
(allow pasta_t ifconfig_var_run_t (dir (add_name open rmdir write)))
(allow pasta_t ifconfig_var_run_t (file (create open write)))

;; From audit2allow
(allow pasta_t container_runtime_t (fifo_file (write)))
(allow pasta_t self (cap_userns (setgid setuid)))
(allow pasta_t tmpfs_t (filesystem (getattr)))

;; For "podman build"
(allow pasta_t container_runtime_t (dir (open read search)))
(allow pasta_t container_runtime_t (file (read)))
(allow pasta_t container_runtime_t (lnk_file (read)))
(allow pasta_t container_t (lnk_file (read)))

;; Allow pasta to bind to any port
(boolean pasta_allow_bind_any_port true)
(booleanif (pasta_allow_bind_any_port)
    (true
        (allow pasta_t port_type (icmp_socket (accept getopt name_bind)))
        (allow pasta_t port_type (tcp_socket (accept getopt name_bind name_connect)))
        (allow pasta_t port_type (udp_socket (accept getopt name_bind)))
    )
)
